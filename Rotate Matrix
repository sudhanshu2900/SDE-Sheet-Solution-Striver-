PROBLEM & SOLUTION LINK:


CODE:

____________Method-1_____________               TC- O(n^2),   SC- O(n^2)

void rotateMatrix(int mat[n][n]){
	
	int res[n][n];

	for(int i=0; i<n; i++){
		for(int j=0; j<n; j++){
			res[j][n-i-1] = mat[i][j];
		}
	}
}




___________Method-2_____________               TC- O(n^2),   SC-O(1)

void rotateMatrix(int mat[n][n]){
	
	for(int i=0; i<n; i++){
		for(int j=i; j<n-1-i; j++)
		{
			int temp = mat[i][j];

			mat[i][j] = mat[n-1-j]-[i];
			mat[n-1-j][i] = mat[n-1-i][n-1-j];
			mat[n-1-i][n-1-j] = mat[j][n-1-i];
			mat[j][n-1-i] = temp;
		}
	}
	
}



____________Method-3____________

Here, first we transpose the matrix and then reverse each row one by one.

	Ex.
		   [1 2 3]		 	  [1 4 7]				     [7 4 1]
	mat[][] =  [4 5 6]    -- Transpose -->    [2 5 8]     -- reverse each row -->        [8 5 2]
		   [7 8 9]			  [3 6 9]				     [9 6 3]



Void rotateMatrix(int mat[n][n])
{
	for(int i=0; i<n; i++){				//Transpose
		for(int j=0; j<i; j++)
			swap(mat[i][j], mat[j][i]);
	}
	reverse(mat[i].begin(), mat[i].end());		//reverse
}




