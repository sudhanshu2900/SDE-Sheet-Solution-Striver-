vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        
        int n = nums.size();
        int i, left, right;
        vector<vector<int>> res;
        
        for(int i=0; i<n-2; i++){
            if(i==0 || (i > 0 && nums[i] != nums[i-1])){    						//check previous value of nums[i], means value at index i,i+1 not having same values to remove from any duplicacy.
                
                left = i+1, right = n-1;
                
                while(left < right){
                    if((nums[left] + nums[right]) == (- nums[i])){
                        vector<int> tempAns;
                        tempAns.push_back(nums[i]);
                        tempAns.push_back(nums[left]);
                        tempAns.push_back(nums[right]);
                        
                        res.push_back(tempAns);
                        
                        while(left < right && nums[left] == nums[left+1]) left++;      //it also prevent from duplicacy
                        while(left < right && nums[right] == nums[right-1]) right--;   //it also prevent from duplicacy
                        
                        left++;
                        right--;
                    }
                    else if((nums[left] + nums[right]) < (- nums[i])) left++;
                    else right--;
                }
            }
        }
        return res;
    }





