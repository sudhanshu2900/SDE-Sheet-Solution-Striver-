PROBLEM & SOLUTION LINK:

CODE:

__________________Method-1___________________         TC- O(n^2),   SC- O(n^2)

vector<ll> nthRowOfPascalTriangle(int n) {
        ll mod = 1000000007;
        vector<vector<ll>> res;
        
        res.push_back({1});
        res.push_back({1,1});
        
        for(int i=3; i<=n; i++){
            vector<ll> compute;
            
            compute.push_back(1);
            for(int j=0; j<i-2; j++){
                ll val = (res[i-2][j] + res[i-2][j+1])%mod;
                compute.push_back(val);
            }
            compute.push_back(1);
            
            res.push_back(compute);
        }
        return res[n-1];                      
    }
    
   
   
______________Method-2___________________               TC-O(n^2),   SC-O(1)
    
void printnthRowOfPascalTriangle(int n)
{     
    for (int line = 1; line <= n; line++)
    {
        int C = 1; 
        for (int i = 1; i <= line; i++)
        {
            cout<< C<<" ";
            C = C * (line - i) / i;
        }
        cout<<"\n";
    }
}



______________Method-3__________________                     TC- O(n),   SC- O(n)


vector<ll> nthRowOfPascalTriangle(int n)
{   
    int res = 1, m = 1;
    vector<int> answer;
    
    for (int i=0; i<m; i++)
    {
        res = res * (m + i);
        res = res / (i + 1);
        
        answer.push_back(res);
    }
    return answer;
}




**************************************** VARIATION ****************************************************

        If someone ask the value at particular block means at a column of a row.     
        like: Row no = 2, col no = 4         (that is value at matrix[1][3])

        So its simple formula to calculate this is - (r-1)
                                                          C               where, r -> row no    and    c -> column no   
                                                            (c-1)

                                                    
        Here its,  TC- O(n)   and   SC- O(1) 
        
        
 
                                                    
                       
