string longestPalindrome(string s) {
        int n = s.length();
        if(n==1) return s;
        int maxLen = 1, start = 0, end = 0; 
        
        for(int i=0; i<n-1; i++){
            int left=i, right=i;
            //palindrome(left, right, n, s, start, end, maxLen); 
            while(left>=0 && right<n){
                if(s[left]==s[right]){
                    left--;
                    right++;
                }
                else break;
            }
            int len = right-left-1;
            if(maxLen < len){
                maxLen = len;
                start = left+1;
                end = right-1;
            }
        }
        
        for(int i=0; i<n-1; i++){
            int left=i, right=i+1;
            //palindrome(left, right, n, s, start, end, maxLen);
            while(left>=0 && right<n){
                if(s[left]==s[right]){
                    left--;
                    right++;
                }
                else break;
            }
            int len = right-left-1;
            if(maxLen < len){
                maxLen = len;
                start = left+1;
                end = right-1;
            }
        }
        
        return s.substr(start, maxLen);
    }
    
    
    
    
    
