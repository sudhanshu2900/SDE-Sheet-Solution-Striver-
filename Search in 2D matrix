PROBLEM & SOLUTION LINK: https://www.youtube.com/watch?v=ZYpYur0znng&list=PLgUwDviBIf0rPG3Ictpu74YWBQ1CaBkm2&index=13 


CODE:

______________________Method-1_________________________               TC- O(n^2),   SC- O(1)

bool searchInMatrix(vector<vector<int>> mat, int target){
	int n = mat.size(), m = mat[0].size();

	for(int i=0; i<n; i++){
		for(int j=0; j<m; j++)
			if(mat[i][j] == target) return true;
	}

	return false;
}


______________________Method-2__________________________              TC- O(n),   SC- O(1)

bool searchInMatrix(vector<vector<int>> mat, int target){
	int n = mat.size(), m = mat[0].size();
	int i = 0, j = m-1;

	while(i<n || j>=0){
		if(target == mat[i][j]) return true;
		else if(target < mat[i][j]) j--;
		else i++;
	}

	return false;
}



___________________Method-3_________________________                  TC- O(log(n*m)),   SC- O(1) 

bool searchInMatrix(vector<vector<int>> mat, int target){
	
	int n = mat.size(), m = mat[0].size();
	int low = 0, high = (n*m)-1;

	while(low<=high){
		int mid = (low + (high - low)/2);

		if(mat[mid/m][mid%m] == target) return true;
		else if(mat[mid/m][mid%m] > target) high = mid-1;
		else low = mid+1;
	}

	return false;
}





